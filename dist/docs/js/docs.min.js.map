{"version":3,"sources":["app.js","directives.js","docs.js","errors.js","examples.js","search.js","tutorials.js","versions.js"],"names":[],"mappings":"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","file":"docs.min.js","sourcesContent":["angular.module('docsApp', [\n  'ngRoute',\n  'ngCookies',\n  'ngSanitize',\n  'ngAnimate',\n  'DocsController',\n  'versionsData',\n  'pagesData',\n  'navData',\n  'directives',\n  'errors',\n  'examples',\n  'search',\n  'tutorials',\n  'versions',\n  'bootstrap',\n  'ui.bootstrap.dropdown'\n])\n\n.config(['$locationProvider', function($locationProvider) {\n  $locationProvider.html5Mode(true).hashPrefix('!');\n}]);\n","angular.module('directives', [])\n\n/**\n * backToTop Directive\n * @param  {Function} $anchorScroll\n *\n * @description Ensure that the browser scrolls when the anchor is clicked\n */\n.directive('backToTop', ['$anchorScroll', '$location', function($anchorScroll, $location) {\n  return function link(scope, element) {\n    element.on('click', function(event) {\n      $location.hash('');\n      scope.$apply($anchorScroll);\n    });\n  };\n}])\n\n\n.directive('code', function() {\n  return {\n    restrict: 'E',\n    terminal: true,\n    compile: function(element) {\n      var linenums = element.hasClass('linenum');// || element.parent()[0].nodeName === 'PRE';\n      var match = /lang-(\\S+)/.exec(element[0].className);\n      var lang = match && match[1];\n      var html = element.html();\n      element.html(window.prettyPrintOne(html, lang, linenums));\n    }\n  };\n})\n\n.directive('scrollYOffsetElement', ['$anchorScroll', function($anchorScroll) {\n  return function(scope, element) {\n    $anchorScroll.yOffset = element;\n  };\n}]);\n","angular.module('DocsController', [])\n\n.controller('DocsController', [\n          '$scope', '$rootScope', '$location', '$window', '$cookies', 'openPlunkr',\n              'NG_PAGES', 'NG_NAVIGATION', 'NG_VERSION',\n  function($scope, $rootScope, $location, $window, $cookies, openPlunkr,\n              NG_PAGES, NG_NAVIGATION, NG_VERSION) {\n\n  $scope.openPlunkr = openPlunkr;\n\n  $scope.docsVersion = NG_VERSION.isSnapshot ? 'snapshot' : NG_VERSION.version;\n\n  $scope.navClass = function(navItem) {\n    return {\n      active: navItem.href && this.currentPage && this.currentPage.path,\n      current: this.currentPage && this.currentPage.path === navItem.href,\n      'nav-index-section': navItem.type === 'section'\n    };\n  };\n\n\n\n  $scope.$on('$includeContentLoaded', function() {\n    var pagePath = $scope.currentPage ? $scope.currentPage.path : $location.path();\n    $window._gaq.push(['_trackPageview', pagePath]);\n  });\n\n  $scope.$watch(function docsPathWatch() {return $location.path(); }, function docsPathWatchAction(path) {\n\n    path = path.replace(/^\\/?(.+?)(\\/index)?\\/?$/, '$1');\n\n    currentPage = $scope.currentPage = NG_PAGES[path];\n\n    if ( currentPage ) {\n      $scope.partialPath = 'partials/' + path + '.html';\n      $scope.currentArea = NG_NAVIGATION[currentPage.area];\n      var pathParts = currentPage.path.split('/');\n      var breadcrumb = $scope.breadcrumb = [];\n      var breadcrumbPath = '';\n      angular.forEach(pathParts, function(part) {\n        breadcrumbPath += part;\n        breadcrumb.push({ name: (NG_PAGES[breadcrumbPath]&&NG_PAGES[breadcrumbPath].name) || part, url: breadcrumbPath });\n        breadcrumbPath += '/';\n      });\n    } else {\n      $scope.currentArea = NG_NAVIGATION['api'];\n      $scope.breadcrumb = [];\n      $scope.partialPath = 'Error404.html';\n    }\n  });\n\n  /**********************************\n   Initialize\n   ***********************************/\n\n  $scope.versionNumber = angular.version.full;\n  $scope.version = angular.version.full + \"  \" + angular.version.codeName;\n  $scope.loading = 0;\n\n\n  var INDEX_PATH = /^(\\/|\\/index[^\\.]*.html)$/;\n  if (!$location.path() || INDEX_PATH.test($location.path())) {\n    $location.path('/api').replace();\n  }\n\n}]);\n","angular.module('errors', ['ngSanitize'])\n\n.filter('errorLink', ['$sanitize', function ($sanitize) {\n  var LINKY_URL_REGEXP = /((ftp|https?):\\/\\/|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s\\.\\;\\,\\(\\)\\{\\}<>]/g,\n      MAILTO_REGEXP = /^mailto:/,\n      STACK_TRACE_REGEXP = /:\\d+:\\d+$/;\n\n  var truncate = function (text, nchars) {\n    if (text.length > nchars) {\n      return text.substr(0, nchars - 3) + '...';\n    }\n    return text;\n  };\n\n  return function (text, target) {\n    var targetHtml = target ? ' target=\"' + target + '\"' : '';\n\n    if (!text) return text;\n\n    return $sanitize(text.replace(LINKY_URL_REGEXP, function (url) {\n      if (STACK_TRACE_REGEXP.test(url)) {\n        return url;\n      }\n\n      // if we did not match ftp/http/mailto then assume mailto\n      if (!/^((ftp|https?):\\/\\/|mailto:)/.test(url)) url = 'mailto:' + url;\n\n      return '<a' + targetHtml + ' href=\"' + url +'\">' +\n                truncate(url.replace(MAILTO_REGEXP, ''), 60) +\n              '</a>';\n    }));\n  };\n}])\n\n\n.directive('errorDisplay', ['$location', 'errorLinkFilter', function ($location, errorLinkFilter) {\n  var interpolate = function (formatString) {\n    var formatArgs = arguments;\n    return formatString.replace(/\\{\\d+\\}/g, function (match) {\n      // Drop the braces and use the unary plus to convert to an integer.\n      // The index will be off by one because of the formatString.\n      var index = +match.slice(1, -1);\n      if (index + 1 >= formatArgs.length) {\n        return match;\n      }\n      return formatArgs[index+1];\n    });\n  };\n\n  return {\n    link: function (scope, element, attrs) {\n      var search = $location.search(),\n        formatArgs = [attrs.errorDisplay],\n        i;\n\n      for (i = 0; angular.isDefined(search['p'+i]); i++) {\n        formatArgs.push(search['p'+i]);\n      }\n      element.html(errorLinkFilter(interpolate.apply(null, formatArgs), '_blank'));\n    }\n  };\n}]);\n","angular.module('examples', [])\n\n.factory('formPostData', ['$document', function($document) {\n  return function(url, newWindow, fields) {\n    /**\n     * If the form posts to target=\"_blank\", pop-up blockers can cause it not to work.\n     * If a user choses to bypass pop-up blocker one time and click the link, they will arrive at\n     * a new default plnkr, not a plnkr with the desired template.  Given this undesired behavior,\n     * some may still want to open the plnk in a new window by opting-in via ctrl+click.  The\n     * newWindow param allows for this possibility.\n     */\n    var target = newWindow ? '_blank' : '_self';\n    var form = angular.element('<form style=\"display: none;\" method=\"post\" action=\"' + url + '\" target=\"' + target + '\"></form>');\n    angular.forEach(fields, function(value, name) {\n      var input = angular.element('<input type=\"hidden\" name=\"' +  name + '\">');\n      input.attr('value', value);\n      form.append(input);\n    });\n    $document.find('body').append(form);\n    form[0].submit();\n    form.remove();\n  };\n}])\n\n\n.factory('openPlunkr', ['formPostData', '$http', '$q', function(formPostData, $http, $q) {\n  return function(exampleFolder, clickEvent) {\n\n    var exampleName = 'AngularJS Example';\n    var newWindow = clickEvent.ctrlKey || clickEvent.metaKey;\n\n    // Load the manifest for the example\n    $http.get(exampleFolder + '/manifest.json')\n      .then(function(response) {\n        return response.data;\n      })\n      .then(function(manifest) {\n        var filePromises = [];\n\n        // Build a pretty title for the Plunkr\n        var exampleNameParts = manifest.name.split('-');\n        exampleNameParts.unshift('AngularJS');\n        angular.forEach(exampleNameParts, function(part, index) {\n          exampleNameParts[index] = part.charAt(0).toUpperCase() + part.substr(1);\n        });\n        exampleName = exampleNameParts.join(' - ');\n\n        angular.forEach(manifest.files, function(filename) {\n          filePromises.push($http.get(exampleFolder + '/' + filename, { transformResponse: [] })\n            .then(function(response) {\n\n              // The manifests provide the production index file but Plunkr wants\n              // a straight index.html\n              if (filename === \"index-production.html\") {\n                filename = \"index.html\"\n              }\n\n              return {\n                name: filename,\n                content: response.data\n              };\n            }));\n        });\n        return $q.all(filePromises);\n      })\n      .then(function(files) {\n        var postData = {};\n\n        angular.forEach(files, function(file) {\n          postData['files[' + file.name + ']'] = file.content;\n        });\n\n        postData['tags[0]'] = \"angularjs\";\n        postData['tags[1]'] = \"example\";\n        postData.private = true;\n        postData.description = exampleName;\n\n        formPostData('http://plnkr.co/edit/?p=preview', newWindow, postData);\n      });\n  };\n}]);\n","angular.module('search', [])\n\n.controller('DocsSearchCtrl', ['$scope', '$location', 'docsSearch', function($scope, $location, docsSearch) {\n  function clearResults() {\n    $scope.results = [];\n    $scope.colClassName = null;\n    $scope.hasResults = false;\n  }\n\n  $scope.search = function(q) {\n    var MIN_SEARCH_LENGTH = 2;\n    if(q.length >= MIN_SEARCH_LENGTH) {\n      docsSearch(q).then(function(hits) {\n        var results = {};\n        angular.forEach(hits, function(hit) {\n          var area = hit.area;\n\n          var limit = (area == 'api') ? 40 : 14;\n          results[area] = results[area] || [];\n          if(results[area].length < limit) {\n            results[area].push(hit);\n          }\n        });\n\n        var totalAreas = 0;\n        for(var i in results) {\n          ++totalAreas;\n        }\n        if(totalAreas > 0) {\n          $scope.colClassName = 'cols-' + totalAreas;\n        }\n        $scope.hasResults = totalAreas > 0;\n        $scope.results = results;\n      });\n    }\n    else {\n      clearResults();\n    }\n    if(!$scope.$$phase) $scope.$apply();\n  };\n\n  $scope.submit = function() {\n    var result;\n    if ($scope.results.api) {\n      result = $scope.results.api[0];\n    } else {\n      for(var i in $scope.results) {\n        result = $scope.results[i][0];\n        if(result) {\n          break;\n        }\n      }\n    }\n    if(result) {\n      $location.path(result.path);\n      $scope.hideResults();\n    }\n  };\n\n  $scope.hideResults = function() {\n    clearResults();\n    $scope.q = '';\n  };\n}])\n\n\n.controller('Error404SearchCtrl', ['$scope', '$location', 'docsSearch',\n        function($scope, $location, docsSearch) {\n  docsSearch($location.path().split(/[\\/\\.:]/).pop()).then(function(results) {\n    $scope.results = {};\n    angular.forEach(results, function(result) {\n      var area = $scope.results[result.area] || [];\n      area.push(result);\n      $scope.results[result.area] = area;\n    });\n  });\n}])\n\n\n.provider('docsSearch', function() {\n\n  // This version of the service builds the index in the current thread,\n  // which blocks rendering and other browser activities.\n  // It should only be used where the browser does not support WebWorkers\n  function localSearchFactory($http, $timeout, NG_PAGES) {\n\n    console.log('Using Local Search Index');\n\n    // Create the lunr index\n    var index = lunr(function() {\n      this.ref('path');\n      this.field('titleWords', {boost: 50});\n      this.field('members', { boost: 40});\n      this.field('keywords', { boost : 20 });\n    });\n\n    // Delay building the index by loading the data asynchronously\n    var indexReadyPromise = $http.get('js/search-data.json').then(function(response) {\n      var searchData = response.data;\n      // Delay building the index for 500ms to allow the page to render\n      return $timeout(function() {\n        // load the page data into the index\n        angular.forEach(searchData, function(page) {\n          index.add(page);\n        });\n      }, 500);\n    });\n\n    // The actual service is a function that takes a query string and\n    // returns a promise to the search results\n    // (In this case we just resolve the promise immediately as it is not\n    // inherently an async process)\n    return function(q) {\n      return indexReadyPromise.then(function() {\n        var hits = index.search(q);\n        var results = [];\n        angular.forEach(hits, function(hit) {\n          results.push(NG_PAGES[hit.ref]);\n        });\n        return results;\n      });\n    };\n  }\n  localSearchFactory.$inject = ['$http', '$timeout', 'NG_PAGES'];\n\n  // This version of the service builds the index in a WebWorker,\n  // which does not block rendering and other browser activities.\n  // It should only be used where the browser does support WebWorkers\n  function webWorkerSearchFactory($q, $rootScope, NG_PAGES) {\n\n    console.log('Using WebWorker Search Index')\n\n    var searchIndex = $q.defer();\n    var results;\n\n    var worker = new Worker('js/search-worker.js');\n\n    // The worker will send us a message in two situations:\n    // - when the index has been built, ready to run a query\n    // - when it has completed a search query and the results are available\n    worker.onmessage = function(oEvent) {\n      $rootScope.$apply(function() {\n\n        switch(oEvent.data.e) {\n          case 'index-ready':\n            searchIndex.resolve();\n            break;\n          case 'query-ready':\n            var pages = oEvent.data.d.map(function(path) {\n              return NG_PAGES[path];\n            });\n            results.resolve(pages);\n            break;\n        }\n      });\n    };\n\n    // The actual service is a function that takes a query string and\n    // returns a promise to the search results\n    return function(q) {\n\n      // We only run the query once the index is ready\n      return searchIndex.promise.then(function() {\n\n        results = $q.defer();\n        worker.postMessage({ q: q });\n        return results.promise;\n      });\n    };\n  }\n  webWorkerSearchFactory.$inject = ['$q', '$rootScope', 'NG_PAGES'];\n\n  return {\n    $get: window.Worker ? webWorkerSearchFactory : localSearchFactory\n  };\n})\n\n.directive('focused', function($timeout) {\n  return function(scope, element, attrs) {\n    element[0].focus();\n    element.on('focus', function() {\n      scope.$apply(attrs.focused + '=true');\n    });\n    element.on('blur', function() {\n      // have to use $timeout, so that we close the drop-down after the user clicks,\n      // otherwise when the user clicks we process the closing before we process the click.\n      $timeout(function() {\n        scope.$eval(attrs.focused + '=false');\n      });\n    });\n    scope.$eval(attrs.focused + '=true');\n  };\n})\n\n.directive('docsSearchInput', ['$document',function($document) {\n  return function(scope, element, attrs) {\n    var ESCAPE_KEY_KEYCODE = 27,\n        FORWARD_SLASH_KEYCODE = 191;\n    angular.element($document[0].body).on('keydown', function(event) {\n      var input = element[0];\n      if(event.keyCode == FORWARD_SLASH_KEYCODE && document.activeElement != input) {\n        event.stopPropagation();\n        event.preventDefault();\n        input.focus();\n      }\n    });\n\n    element.on('keydown', function(event) {\n      if(event.keyCode == ESCAPE_KEY_KEYCODE) {\n        event.stopPropagation();\n        event.preventDefault();\n        scope.$apply(function() {\n          scope.hideResults();\n        });\n      }\n    });\n  };\n}]);\n","angular.module('tutorials', [])\n\n.directive('docTutorialNav', function() {\n  var pages = [\n    '',\n    'step_00', 'step_01', 'step_02', 'step_03', 'step_04',\n    'step_05', 'step_06', 'step_07', 'step_08', 'step_09',\n    'step_10', 'step_11', 'step_12', 'the_end'\n  ];\n  return {\n    scope: {},\n    template:\n      '<a ng-href=\"tutorial/{{prev}}\"><li class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-step-backward\"></i> Previous</li></a>\\n' +\n      '<a ng-href=\"http://angular.github.io/angular-phonecat/step-{{seq}}/app\"><li class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-play\"></i> Live Demo</li></a>\\n' +\n      '<a ng-href=\"https://github.com/angular/angular-phonecat/compare/step-{{diffLo}}...step-{{diffHi}}\"><li class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-search\"></i> Code Diff</li></a>\\n' +\n      '<a ng-href=\"tutorial/{{next}}\"><li class=\"btn btn-primary\">Next <i class=\"glyphicon glyphicon-step-forward\"></i></li></a>',\n    link: function(scope, element, attrs) {\n      var seq = 1 * attrs.docTutorialNav;\n      scope.seq = seq;\n      scope.prev = pages[seq];\n      scope.next = pages[2 + seq];\n      scope.diffLo = seq ? (seq - 1): '0~1';\n      scope.diffHi = seq;\n\n      element.addClass('btn-group');\n      element.addClass('tutorial-nav');\n    }\n  };\n})\n\n\n.directive('docTutorialReset', function() {\n  return {\n    scope: {\n      'step': '@docTutorialReset'\n    },\n    template:\n      '<p><a href=\"\" ng-click=\"show=!show;$event.stopPropagation()\">Workspace Reset Instructions  ➤</a></p>\\n' +\n      '<div class=\"alert alert-info\" ng-show=\"show\">\\n' +\n      '  <p>Reset the workspace to step {{step}}.</p>' +\n      '  <p><pre>git checkout -f step-{{step}}</pre></p>\\n' +\n      '  <p>Refresh your browser or check out this step online: '+\n          '<a href=\"http://angular.github.io/angular-phonecat/step-{{step}}/app\">Step {{step}} Live Demo</a>.</p>\\n' +\n      '</div>\\n' +\n      '<p>The most important changes are listed below. You can see the full diff on ' +\n        '<a ng-href=\"https://github.com/angular/angular-phonecat/compare/step-{{step ? (step - 1): \\'0~1\\'}}...step-{{step}}\">GitHub</a>\\n' +\n      '</p>'\n  };\n});","\"use strict\";\n\nangular.module('versions', [])\n\n.controller('DocsVersionsCtrl', ['$scope', '$location', '$window', 'NG_VERSIONS', function($scope, $location, $window, NG_VERSIONS) {\n  $scope.docs_version  = NG_VERSIONS[0];\n  $scope.docs_versions = NG_VERSIONS;\n\n  for(var i=0, minor = NaN; i < NG_VERSIONS.length; i++) {\n    var version = NG_VERSIONS[i];\n    // NaN will give false here\n    if (minor <= version.minor) {\n      continue;\n    }\n    version.isLatest = true;\n    minor = version.minor;\n  }\n\n  $scope.getGroupName = function(v) {\n    return v.isLatest ? 'Latest' : ('v' + v.major + '.' + v.minor + '.x');\n  };\n\n  $scope.jumpToDocsVersion = function(version) {\n    var currentPagePath = $location.path().replace(/\\/$/, '');\n\n    // TODO: We need to do some munging of the path for different versions of the API...\n\n\n    $window.location = version.docsUrl + currentPagePath;\n  };\n}]);\n"],"sourceRoot":"/source/"}