{"version":3,"sources":["js/angular-bootstrap/bootstrap.js"],"names":[],"mappings":"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","file":"js/angular-bootstrap/bootstrap.min.js","sourcesContent":["'use strict';\n\nvar directive = {};\n\ndirective.runnableExample = ['$templateCache', '$document', function($templateCache, $document) {\n  var exampleClassNameSelector = '.runnable-example-file';\n  var doc = $document[0];\n  var tpl =\n    '<nav class=\"runnable-example-tabs\" ng-if=\"tabs\">' +\n    '  <a ng-class=\"{active:$index==activeTabIndex}\"' +\n         'ng-repeat=\"tab in tabs track by $index\" ' +\n         'href=\"\" ' +\n         'class=\"btn\"' +\n         'ng-click=\"setTab($index)\">' +\n    '    {{ tab }}' +\n    '  </a>' +\n    '</nav>';\n\n  return {\n    restrict: 'C',\n    scope : true,\n    controller : ['$scope', function($scope) {\n      $scope.setTab = function(index) {\n        var tab = $scope.tabs[index];\n        $scope.activeTabIndex = index;\n        $scope.$broadcast('tabChange', index, tab);\n      };\n    }],\n    compile : function(element) {\n      element.html(tpl + element.html());\n      return function(scope, element) {\n        var node = element[0];\n        var examples = node.querySelectorAll(exampleClassNameSelector);\n        var tabs = [], now = Date.now();\n        angular.forEach(examples, function(child, index) {\n          tabs.push(child.getAttribute('name'));\n        });\n\n        if(tabs.length > 0) {\n          scope.tabs = tabs;\n          scope.$on('tabChange', function(e, index, title) {\n            angular.forEach(examples, function(child) {\n              child.style.display = 'none';\n            });\n            var selected = examples[index];\n            selected.style.display = 'block';\n          });\n          scope.setTab(0);\n        }\n      }\n    }\n  };\n}];\n\ndirective.dropdownToggle =\n          ['$document', '$location', '$window',\n  function ($document,   $location,   $window) {\n    var openElement = null, close;\n    return {\n      restrict: 'C',\n      link: function(scope, element, attrs) {\n        scope.$watch(function dropdownTogglePathWatch(){return $location.path();}, function dropdownTogglePathWatchAction() {\n          close && close();\n        });\n\n        element.parent().on('click', function(event) {\n          close && close();\n        });\n\n        element.on('click', function(event) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          var iWasOpen = false;\n\n          if (openElement) {\n            iWasOpen = openElement === element;\n            close();\n          }\n\n          if (!iWasOpen){\n            element.parent().addClass('open');\n            openElement = element;\n\n            close = function (event) {\n              event && event.preventDefault();\n              event && event.stopPropagation();\n              $document.off('click', close);\n              element.parent().removeClass('open');\n              close = null;\n              openElement = null;\n            }\n\n            $document.on('click', close);\n          }\n        });\n      }\n    };\n  }];\n\ndirective.syntax = function() {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      function makeLink(type, text, link, icon) {\n        return '<a href=\"' + link + '\" class=\"btn syntax-' + type + '\" target=\"_blank\" rel=\"nofollow\">' +\n                '<span class=\"' + icon + '\"></span> ' + text +\n               '</a>';\n      };\n\n      var html = '';\n      var types = {\n        'github' : {\n          text : 'View on Github',\n          key : 'syntaxGithub',\n          icon : 'icon-github'\n        },\n        'plunkr' : {\n          text : 'View on Plunkr',\n          key : 'syntaxPlunkr',\n          icon : 'icon-arrow-down'\n        },\n        'jsfiddle' : {\n          text : 'View on JSFiddle',\n          key : 'syntaxFiddle',\n          icon : 'icon-cloud'\n        }\n      };\n      for(var type in types) {\n        var data = types[type];\n        var link = attrs[data.key];\n        if(link) {\n          html += makeLink(type, data.text, link, data.icon);\n        }\n      };\n\n      var nav = document.createElement('nav');\n      nav.className = 'syntax-links';\n      nav.innerHTML = html;\n\n      var node = element[0];\n      var par = node.parentNode;\n      par.insertBefore(nav, node);\n    }\n  }\n}\n\ndirective.tabbable = function() {\n  return {\n    restrict: 'C',\n    compile: function(element) {\n      var navTabs = angular.element('<ul class=\"nav nav-tabs\"></ul>'),\n          tabContent = angular.element('<div class=\"tab-content\"></div>');\n\n      tabContent.append(element.contents());\n      element.append(navTabs).append(tabContent);\n    },\n    controller: ['$scope', '$element', function($scope, $element) {\n      var navTabs = $element.contents().eq(0),\n          ngModel = $element.controller('ngModel') || {},\n          tabs = [],\n          selectedTab;\n\n      ngModel.$render = function() {\n        var $viewValue = this.$viewValue;\n\n        if (selectedTab ? (selectedTab.value != $viewValue) : $viewValue) {\n          if(selectedTab) {\n            selectedTab.paneElement.removeClass('active');\n            selectedTab.tabElement.removeClass('active');\n            selectedTab = null;\n          }\n          if($viewValue) {\n            for(var i = 0, ii = tabs.length; i < ii; i++) {\n              if ($viewValue == tabs[i].value) {\n                selectedTab = tabs[i];\n                break;\n              }\n            }\n            if (selectedTab) {\n              selectedTab.paneElement.addClass('active');\n              selectedTab.tabElement.addClass('active');\n            }\n          }\n\n        }\n      };\n\n      this.addPane = function(element, attr) {\n        var li = angular.element('<li><a href></a></li>'),\n            a = li.find('a'),\n            tab = {\n              paneElement: element,\n              paneAttrs: attr,\n              tabElement: li\n            };\n\n        tabs.push(tab);\n\n        attr.$observe('value', update)();\n        attr.$observe('title', function(){ update(); a.text(tab.title); })();\n\n        function update() {\n          tab.title = attr.title;\n          tab.value = attr.value || attr.title;\n          if (!ngModel.$setViewValue && (!ngModel.$viewValue || tab == selectedTab)) {\n            // we are not part of angular\n            ngModel.$viewValue = tab.value;\n          }\n          ngModel.$render();\n        }\n\n        navTabs.append(li);\n        li.on('click', function(event) {\n          event.preventDefault();\n          event.stopPropagation();\n          if (ngModel.$setViewValue) {\n            $scope.$apply(function() {\n              ngModel.$setViewValue(tab.value);\n              ngModel.$render();\n            });\n          } else {\n            // we are not part of angular\n            ngModel.$viewValue = tab.value;\n            ngModel.$render();\n          }\n        });\n\n        return function() {\n          tab.tabElement.remove();\n          for(var i = 0, ii = tabs.length; i < ii; i++ ) {\n            if (tab == tabs[i]) {\n              tabs.splice(i, 1);\n            }\n          }\n        };\n      }\n    }]\n  };\n};\n\ndirective.table = function() {\n  return {\n    restrict: 'E',\n    link: function(scope, element, attrs) {\n      if (!attrs['class']) {\n        element.addClass('table table-bordered table-striped code-table');\n      }\n    }\n  };\n};\n\nvar popoverElement = function() {\n  var object = {\n    init : function() {\n      this.element = angular.element(\n        '<div class=\"popover popover-incode top\">' +\n          '<div class=\"arrow\"></div>' +\n          '<div class=\"popover-inner\">' +\n            '<div class=\"popover-title\"><code></code></div>' +\n            '<div class=\"popover-content\"></div>' +\n          '</div>' +\n        '</div>'\n      );\n      this.node = this.element[0];\n      this.element.css({\n        'display':'block',\n        'position':'absolute'\n      });\n      angular.element(document.body).append(this.element);\n\n      var inner = this.element.children()[1];\n      this.titleElement   = angular.element(inner.childNodes[0].firstChild);\n      this.contentElement = angular.element(inner.childNodes[1]);\n\n      //stop the click on the tooltip\n      this.element.on('click', function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n      });\n\n      var self = this;\n      angular.element(document.body).on('click',function(event) {\n        if(self.visible()) self.hide();\n      });\n    },\n\n    show : function(x,y) {\n      this.element.addClass('visible');\n      this.position(x || 0, y || 0);\n    },\n\n    hide : function() {\n      this.element.removeClass('visible');\n      this.position(-9999,-9999);\n    },\n\n    visible : function() {\n      return this.position().y >= 0;\n    },\n\n    isSituatedAt : function(element) {\n      return this.besideElement ? element[0] == this.besideElement[0] : false;\n    },\n\n    title : function(value) {\n      return this.titleElement.html(value);\n    },\n\n    content : function(value) {\n      if(value && value.length > 0) {\n        value = marked(value);\n      }\n      return this.contentElement.html(value);\n    },\n\n    positionArrow : function(position) {\n      this.node.className = 'popover ' + position;\n    },\n\n    positionAway : function() {\n      this.besideElement = null;\n      this.hide();\n    },\n\n    positionBeside : function(element) {\n      this.besideElement = element;\n\n      var elm = element[0];\n      var x = elm.offsetLeft;\n      var y = elm.offsetTop;\n      x -= 30;\n      y -= this.node.offsetHeight + 10;\n      this.show(x,y);\n    },\n\n    position : function(x,y) {\n      if(x != null && y != null) {\n        this.element.css('left',x + 'px');\n        this.element.css('top', y + 'px');\n      }\n      else {\n        return {\n          x : this.node.offsetLeft,\n          y : this.node.offsetTop\n        };\n      }\n    }\n  };\n\n  object.init();\n  object.hide();\n\n  return object;\n};\n\ndirective.popover = ['popoverElement', function(popover) {\n  return {\n    restrict: 'A',\n    priority : 500,\n    link: function(scope, element, attrs) {\n      element.on('click',function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if(popover.isSituatedAt(element) && popover.visible()) {\n          popover.title('');\n          popover.content('');\n          popover.positionAway();\n        }\n        else {\n          popover.title(attrs.title);\n          popover.content(attrs.content);\n          popover.positionBeside(element);\n        }\n      });\n    }\n  }\n}];\n\ndirective.tabPane = function() {\n  return {\n    require: '^tabbable',\n    restrict: 'C',\n    link: function(scope, element, attrs, tabsCtrl) {\n      element.on('$remove', tabsCtrl.addPane(element, attrs));\n    }\n  };\n};\n\ndirective.foldout = ['$http', '$animate','$window', function($http, $animate, $window) {\n  return {\n    restrict: 'A',\n    priority : 500,\n    link: function(scope, element, attrs) {\n      var container, loading, url = attrs.url;\n      if(/\\/build\\//.test($window.location.href)) {\n        url = '/build/docs' + url;\n      }\n      element.on('click',function() {\n        scope.$apply(function() {\n          if(!container) {\n            if(loading) return;\n\n            loading = true;\n            var par = element.parent();\n            container = angular.element('<div class=\"foldout\">loading...</div>');\n            $animate.enter(container, null, par);\n\n            $http.get(url, { cache : true }).success(function(html) {\n              loading = false;\n\n              html = '<div class=\"foldout-inner\">' +\n                      '<div calss=\"foldout-arrow\"></div>' +\n                      html +\n                     '</div>';\n              container.html(html);\n\n              //avoid showing the element if the user has already closed it\n              if(container.css('display') == 'block') {\n                container.css('display','none');\n                $animate.addClass(container, 'ng-hide');\n              }\n            });\n          }\n          else {\n            container.hasClass('ng-hide') ? $animate.removeClass(container, 'ng-hide') : $animate.addClass(container, 'ng-hide');\n          }\n        });\n      });\n    }\n  }\n}];\n\nangular.module('bootstrap', [])\n  .directive(directive)\n  .factory('popoverElement', popoverElement)\n  .run(function() {\n    marked.setOptions({\n      gfm: true,\n      tables: true\n    });\n  });\n"],"sourceRoot":"/source/"}