@ngdoc overview
@name Developer Guide: Bootstrap
@description

# Обзор

На этой странице показан процесс инициализации Angular и то, как провести инициализацию вручную, если возникнет такая необходимость.


# Тег `<script>` в Angular

Этот пример показывает рекомендованный способ интеграции Angular, используя, то что мы называем, автоматической инициализацией.


<pre>
<!doctype html>
<html xmlns:ng="http://angularjs.org" ng-app>
  <body>
    ...
    <script src="angular.js">
  </body>
</html>
</pre>

  * Размещайте тэг `<script>` в конце страницы. Располагая его подобным образом вы уменьшаете время загрузки вашего приложения, потому что загрузка HTML не будет заблокирована загрузкой  angular.js. Последнюю версию можно найти на http://code.angularjs.org. Пожалуйста, не используйте эту ссылку в вашем боевом коде, т.к. это создаст брешь в безопасности сайта. Для экспериментов использование этой ссылки вполне подходит.
    * `angular-[version].js` содержит удобный для восприятия код и подходит для разработки и отладки.
    * `angular-[version].min.js` содержит минифицированный и обсуфицированный код, и подходит для применения в продакшене.
  * Поместите `ng-app` в корень вашего приложения, обычно это тэг `<html>`, если хотите чтобы angular загрузил приложение автоматически.

        <html ng-app>

  * Если нужна поддержка IE7, то необходимо добавить `id="ng-app"`

        <html ng-app id="ng-app">

  * Если хотите использовать старый синтаксис директив ng: необходимо включить xml-пространство имен чтобы IE не выдал ошибку. (Эта возможность оставлена по историческим причинам и мы не рекомендуем её использовать.)

        <html xmlns:ng="http://angularjs.org">



# Автоматическая инициализация

Angular автоматически инициализируется во время события `DOMContentLoaded`,
в это время Angular ищет {@link api/ng.directive:ngApp `ng-app`} директиву, обозначающую корень вашего приложения.
Если {@link api/ng.directive:ngApp `ng-app`} найдена то Angular выполнит следующие действия:

  * загрузит {@link guide/module модуль} связанный с директивой.
  * создаст {@link api/AUTO.$injector injector} для приложения
  * скомпилирует DOM-дерево, корнем которого будет являться элемент, содержащий директиву {@link api/ng.directive:ngApp
    `ng-app`}. Это позволяет задействовать только часть DOM для приложения Angular.


<pre>
<!doctype html>
<html ng-app="optionalModuleName">
  <body>
    I can add: {{ 1+2 }}.
    <script src="angular.js"></script>
  </body>
</html>
</pre>



# Ручная инициализация


Чтобы лучше контролировать процесс инициализации, можно использовать загрузку вручную.
Например, когда необходимо включить загрузчик скриптов или выполнить какие-то действия
перед компиляцией страницы Angular'ом.

Ниже пример инициализации Angular вручную.
Пример эквивалентен использованию {@link api/ng.directive:ngApp ng-app} директивы.

<pre>
<!doctype html>
<html xmlns:ng="http://angularjs.org">
  <body>
    Hello {{'World'}}!
    <script src="http://code.angularjs.org/angular.js"></script>
    <script>
       angular.element(document).ready(function() {
         angular.bootstrap(document);
       });
    </script>
  </body>
</html>
</pre>

Необходимо соблюдать следующую последовательность:

  1. После загрузки страницы и всех скриптов,
  найдите корень HTML шаблона, который как правило совпадает с корнем документа.

  2. Вызовите {@link api/angular.bootstrap} для того что бы {@link compiler скомпилировать}
  шаблон в исполняемое двунаправленное приложение.
