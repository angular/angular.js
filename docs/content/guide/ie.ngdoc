@ngdoc overview
@name Internet Explorer Compatibility
@sortOrder 530
@description

# Internet Explorer Compatibility

<div class="alert alert-warning">
**Note:** AngularJS 1.3 is dropping support for IE8. Read more about it on
[our blog](http://blog.angularjs.org/2013/12/angularjs-13-new-release-approaches.html).
AngularJS 1.2 will continue to support IE8, but the core team does not plan to spend time
addressing issues specific to IE8 or earlier.
</div>

This document describes the Internet Explorer (IE) idiosyncrasies when dealing with custom HTML
attributes and tags.

The project currently supports and will attempt to fix bugs for IE9 and above. The continuous
integration server runs all the tests against IE9, IE10, and IE11. See
[Travis CI](https://travis-ci.org/angular/angular.js) and
[ci.angularjs.org](http://ci.angularjs.org).

We do not run tests on IE8 and below. A subset of the AngularJS functionality may work on these
browsers, but it is up to you to test and decide whether it works for your particular app.


## Short Version

To make your Angular application work on IE please make sure that:

  1. Add `id="ng-app"` to the root element in conjunction with `ng-app` attribute

     ```html
       <!doctype html>
       <html xmlns:ng="http://angularjs.org" id="ng-app" ng-app="optionalModuleName">
         ...
       </html>
     ```

  2. Use `ng-style` tags instead of `style="{{ someCss }}"`. The latter works in Chrome and Firefox
     but does not work in Internet Explorer <= 11 (the most recent version at time of writing).


The **important** parts are:

  * `xmlns:ng` - *namespace* - you need one namespace for each custom tag you are planning on
    using.


## CSS Styling of Custom Tag Names

```html
  <html xmlns:ng="needed for ng: namespace">
    <head>
      <style>
        ng\:view {
          display: block;
          border: 1px solid red;
        }

        ng-include {
          display: block;
          border: 1px solid blue;
        }
      </style>
    </head>
    <body>
      <ng:view></ng:view>
      <ng-include></ng-include>
      ...
    </body>
  </html>
```

